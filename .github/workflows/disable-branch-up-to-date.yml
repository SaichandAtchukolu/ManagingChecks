name: Disable Require Branches to be up to date

on:
  workflow_dispatch:  # Allows manual triggering

jobs:
  disable-branch-up-to-date:
    runs-on: windows-latest  # Specify the Windows agent

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install GitHub CLI and jq
        run: |
          choco install jq -y  # Install jq using Chocolatey
          choco install gh -y  # Install GitHub CLI using Chocolatey

      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token

      - name: Fetch Branch Protection Settings
        id: fetch
        run: |
          gh api "repos/${{ github.repository }}/branches/main/protection" > protection.json
          Get-Content protection.json

      - name: Disable Require Branches to be up to date
        if: github.event_name == 'workflow_dispatch'  # Run only on manual trigger
        run: |
          # Read protection settings from protection.json
          $protectionSettings = Get-Content -Raw protection.json | ConvertFrom-Json

          # Check if required_status_checks exist and update settings
          if ($protectionSettings.required_status_checks) {
            # Create a temporary file to hold the payload
            $tempPayloadPath = [System.IO.Path]::GetTempFileName()

            # Write payload directly to the temporary file
            '{"strict": false}' | Out-File -FilePath $tempPayloadPath -Encoding UTF8

            try {
              # Update branch protection settings using the temporary file
              gh api -X PATCH "repos/${{ github.repository }}/branches/main/protection/required_status_checks" `
                -H "Accept: application/vnd.github.v3+json" `
                -H "Content-Type: application/json" `
                --input $tempPayloadPath
            } catch {
              Write-Host "Error updating branch protection settings: $_"
              exit 1
            } finally {
              # Clean up the temporary file
              Remove-Item $tempPayloadPath
            }
          } else {
            echo "No required branches to be up to date found to disable."
          }
