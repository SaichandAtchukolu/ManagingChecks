name: Remove Status Checks and Uncheck Requirement

on:
  workflow_dispatch:  # Allows manual triggering

jobs:
  update-branch-protection:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: |
          Invoke-WebRequest -Uri https://github.com/cli/cli/releases/download/v2.41.0/gh_2.41.0_windows_amd64.msi -OutFile gh-cli.msi
          Start-Process msiexec.exe -ArgumentList '/i', 'gh-cli.msi', '/quiet', '/norestart' -Wait

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token

      - name: Fetch Branch Protection Settings
        id: fetch
        run: gh api "repos/${{ github.repository }}/branches/main/protection" > protection.json

      - name: Debug - Display Protection Settings
        run: Get-Content protection.json

      - name: Uncheck Require Status Checks and Remove Them
        run: |
          # Read the current branch protection settings
          $protection = Get-Content protection.json | ConvertFrom-Json

          # Create JSON input to uncheck and remove status checks
          $jsonInput = @{
              required_status_checks = $null
              enforce_admins = $protection.enforce_admins.enabled
              required_pull_request_reviews = $protection.required_pull_request_reviews
              restrictions = $protection.restrictions
          } | ConvertTo-Json -Compress

          # Create a temporary file to store the JSON input
          $tempFile = New-TemporaryFile
          Set-Content -Path $tempFile -Value $jsonInput

          # Display the JSON input for debugging purposes
          Write-Host "Updating branch protection with:"
          Get-Content $tempFile

          # Update the branch protection settings
          gh api -X PUT "repos/${{ github.repository }}/branches/main/protection" `
            -H "Accept: application/vnd.github+json" `
            --input $tempFile

          # Clean up the temporary file
          Remove-Item -Path $tempFile
